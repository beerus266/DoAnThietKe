{"ast":null,"code":"var _jsxFileName = \"D:\\\\FourthYearBK\\\\Semester2\\\\ProjectFinal\\\\Project\\\\react-app-front-end\\\\src\\\\components\\\\hooks\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useEffect, useState } from 'react'; // Xử lý Bounding box dự đoán được và vẽ ra các Frames\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Canvas({\n  videoRef,\n  model\n}) {\n  _s();\n\n  const [canvasRef] = useState( /*#__PURE__*/createRef(null));\n  let goToRight = null;\n  let x = 0;\n  useEffect(() => {\n    if (canvasRef.current && videoRef.current) {\n      const interval = setInterval(() => {\n        var _canvasRef$current;\n\n        const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d'); // Dự đoán các Bounding Box có thể có\n\n        model.detect(videoRef.current).then(predictions => {\n          if (canvasRef.current) {\n            model.renderPredictions(predictions, canvasRef.current, ctx, videoRef.current);\n            predictions.map(prediction => {\n              // bbox = [x, y, width, height]\n              if (predictions) {\n                if (x < predictions[0].bbox[0]) {\n                  // xác định thao tác bàn tay di chuyển sang Phải\n                  goToRight = true;\n                  console.log(\"RIGHT\");\n                } else {\n                  // xác định thao tác bàn tay di chuyển sang Trái\n                  goToRight = false;\n                  console.log(\"LEFT\");\n                }\n\n                x = predictions[0].bbox[0];\n              }\n            });\n          }\n        });\n      }, 0);\n      return () => clearInterval(interval);\n    } else {\n      console.log(\"no canvas\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"420\",\n    height: \"300\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Canvas, \"hj6uy7SbFwHdXcA8wwPP0ViFaCk=\");\n\n_c = Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["D:/FourthYearBK/Semester2/ProjectFinal/Project/react-app-front-end/src/components/hooks/Canvas.js"],"names":["React","createRef","useEffect","useState","Canvas","videoRef","model","canvasRef","goToRight","x","current","interval","setInterval","ctx","getContext","detect","then","predictions","renderPredictions","map","prediction","bbox","console","log","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CAEA;;;AACA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAhB,EAAmC;AAAA;;AAE9C,QAAM,CAACC,SAAD,IAAcJ,QAAQ,eAACF,SAAS,CAAC,IAAD,CAAV,CAA5B;AACA,MAAIO,SAAS,GAAG,IAAhB;AACA,MAAIC,CAAC,GAAG,CAAR;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,SAAS,CAACG,OAAV,IAAqBL,QAAQ,CAACK,OAAlC,EAA4C;AACxC,YAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAAA;;AAC/B,cAAMC,GAAG,yBAAGN,SAAS,CAACG,OAAb,uDAAG,mBAAmBI,UAAnB,CAA8B,IAA9B,CAAZ,CAD+B,CAE/B;;AACAR,QAAAA,KAAK,CAACS,MAAN,CAAaV,QAAQ,CAACK,OAAtB,EAA+BM,IAA/B,CAAoCC,WAAW,IAAI;AAC/C,cAAIV,SAAS,CAACG,OAAd,EAAsB;AAClBJ,YAAAA,KAAK,CAACY,iBAAN,CAAwBD,WAAxB,EAAqCV,SAAS,CAACG,OAA/C,EAAwDG,GAAxD,EAA6DR,QAAQ,CAACK,OAAtE;AACAO,YAAAA,WAAW,CAACE,GAAZ,CAAgBC,UAAU,IAAI;AAAO;AACjC,kBAAIH,WAAJ,EAAgB;AACZ,oBAAKR,CAAC,GAAGQ,WAAW,CAAC,CAAD,CAAX,CAAeI,IAAf,CAAoB,CAApB,CAAT,EAAiC;AAAE;AAC/Bb,kBAAAA,SAAS,GAAG,IAAZ;AACAc,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,iBAHD,MAGO;AAAE;AACLf,kBAAAA,SAAS,GAAG,KAAZ;AACAc,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDd,gBAAAA,CAAC,GAAGQ,WAAW,CAAC,CAAD,CAAX,CAAeI,IAAf,CAAoB,CAApB,CAAJ;AACH;AACJ,aAXD;AAYH;AACJ,SAhBD;AAiBH,OApB2B,EAoBzB,CApByB,CAA5B;AAsBI,aAAO,MAAMG,aAAa,CAACb,QAAD,CAA1B;AACH,KAxBL,MAwBW;AACHW,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AACR,GA5BQ,EA4BP,EA5BO,CAAT;AA8BA,sBACQ;AAAQ,IAAA,GAAG,EAAEhB,SAAb;AAAwB,IAAA,KAAK,EAAC,KAA9B;AAAoC,IAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADR;AAGH;;GAtCuBH,M;;KAAAA,M","sourcesContent":["import React, {createRef, useEffect, useState } from 'react';\r\n\r\n// Xử lý Bounding box dự đoán được và vẽ ra các Frames\r\nexport default function Canvas({ videoRef, model}){\r\n\r\n    const [canvasRef] = useState(createRef(null));\r\n    let goToRight = null;\r\n    let x = 0;\r\n    useEffect(() => {\r\n        if (canvasRef.current && videoRef.current ) {\r\n            const interval = setInterval(() => {\r\n                const ctx = canvasRef.current?.getContext('2d');\r\n                // Dự đoán các Bounding Box có thể có\r\n                model.detect(videoRef.current).then(predictions => {\r\n                    if (canvasRef.current){\r\n                        model.renderPredictions(predictions, canvasRef.current, ctx, videoRef.current);\r\n                        predictions.map(prediction => {      // bbox = [x, y, width, height]\r\n                            if (predictions){\r\n                                if ( x < predictions[0].bbox[0]) { // xác định thao tác bàn tay di chuyển sang Phải\r\n                                    goToRight = true;\r\n                                    console.log(\"RIGHT\");\r\n                                } else { // xác định thao tác bàn tay di chuyển sang Trái\r\n                                    goToRight = false;\r\n                                    console.log(\"LEFT\");\r\n                                }\r\n                                x = predictions[0].bbox[0];\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }, 0);\r\n  \r\n                return () => clearInterval(interval)\r\n            } else {\r\n                console.log(\"no canvas\");\r\n            }\r\n    },[]);\r\n\r\n    return (\r\n            <canvas ref={canvasRef} width=\"420\" height=\"300\" />\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}