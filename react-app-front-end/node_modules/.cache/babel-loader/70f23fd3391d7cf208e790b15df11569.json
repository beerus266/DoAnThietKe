{"ast":null,"code":"var _jsxFileName = \"D:\\\\FourthYearBK\\\\Semester2\\\\ProjectFinal\\\\Project\\\\react-app-front-end\\\\src\\\\components\\\\hooks\\\\ButtonCamera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Canvas from './Canvas';\nimport * as handTrack from 'handtrackjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ButtonCamera() {\n  _s();\n\n  // Cấu hình các tham số cho Model nhận diện bàn tay\n  const modelParams = {\n    flipHorizontal: true,\n    // flip e.g for video \n    imageScaleFactor: 0.7,\n    // reduce input image size for gains in speed.\n    maxNumBoxes: 5,\n    // maximum number of boxes to detect\n    iouThreshold: 0.5,\n    // ioU threshold for non-max suppression\n    scoreThreshold: 0.79 // confidence threshold for predictions.\n\n  };\n  const [isPlay, setPlay] = useState(false);\n  const [colorButton, setColorButton] = useState('success');\n  const [videoRef] = useState( /*#__PURE__*/React.createRef());\n  const [stream, setStream] = useState(null);\n  const [isLoadedModel, setLoadedModel] = useState(false);\n  const [model, setModel] = useState(null);\n  useEffect(() => {\n    handTrack.load(modelParams).then(modelIn => {\n      setModel(modelIn);\n      setLoadedModel(true);\n    });\n  }, []);\n\n  async function onClickButton() {\n    let videoObj = videoRef.current;\n\n    if (isPlay) {\n      await handTrack.stopVideo(videoObj);\n      setPlay(false);\n      setColorButton('success');\n    } else {\n      // navigator.mediaDevices.getUserMedia({ video: true, audio: false }) \n      //     .then((stream) => {                                            // function(stream) {} not work. Have to use (stream) => {}\n      //         console.log(\"Camera OK\");\n      //         videoObj.srcObject = stream;\n      //         videoObj.play();\n      //         setStream(stream);\n      // })\n      //     .catch(function(err) {\n      //         console.log(\"An error occurred! \" + err);\n      // });\n      let a = await handTrack.startVideo(videoObj); // console.log(a);\n\n      setPlay(true);\n      setColorButton('danger');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: !isLoadedModel,\n      variant: colorButton,\n      onClick: onClickButton,\n      children: isPlay ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: !isLoadedModel ? 'Model is loading' : 'Model is loaded'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), isPlay ? /*#__PURE__*/_jsxDEV(Canvas, {\n      videoRef: videoRef,\n      model: model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ButtonCamera, \"mHn+mATq8CPKbIOV4/yGd+1r56E=\");\n\n_c = ButtonCamera;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonCamera\");","map":{"version":3,"sources":["D:/FourthYearBK/Semester2/ProjectFinal/Project/react-app-front-end/src/components/hooks/ButtonCamera.js"],"names":["React","useEffect","useState","Button","Canvas","handTrack","ButtonCamera","modelParams","flipHorizontal","imageScaleFactor","maxNumBoxes","iouThreshold","scoreThreshold","isPlay","setPlay","colorButton","setColorButton","videoRef","createRef","stream","setStream","isLoadedModel","setLoadedModel","model","setModel","load","then","modelIn","onClickButton","videoObj","current","stopVideo","a","startVideo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;;AAEA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAElC;AACA,QAAMC,WAAW,GAAG;AAChBC,IAAAA,cAAc,EAAE,IADA;AACQ;AACxBC,IAAAA,gBAAgB,EAAE,GAFF;AAEQ;AACxBC,IAAAA,WAAW,EAAE,CAHG;AAGO;AACvBC,IAAAA,YAAY,EAAE,GAJE;AAIQ;AACxBC,IAAAA,cAAc,EAAE,IALA,CAKS;;AALT,GAApB;AAOA,QAAM,CAACC,MAAD,EAASC,OAAT,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,SAAD,CAA9C;AACA,QAAM,CAACe,QAAD,IAAgCf,QAAQ,eAACF,KAAK,CAACkB,SAAN,EAAD,CAA9C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAgClB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACmB,aAAD,EAAgBC,cAAhB,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,SAAS,CAACoB,IAAV,CAAelB,WAAf,EAA4BmB,IAA5B,CAAkCC,OAAO,IAAI;AACzCH,MAAAA,QAAQ,CAACG,OAAD,CAAR;AACAL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD;AAIH,GALQ,EAKP,EALO,CAAT;;AAMA,iBAAeM,aAAf,GAA8B;AAC1B,QAAIC,QAAQ,GAAGZ,QAAQ,CAACa,OAAxB;;AACA,QAAIjB,MAAJ,EAAY;AACR,YAAMR,SAAS,CAAC0B,SAAV,CAAoBF,QAApB,CAAN;AACAf,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,MAAAA,cAAc,CAAC,SAAD,CAAd;AACH,KAJD,MAIO;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIgB,CAAC,GAAG,MAAM3B,SAAS,CAAC4B,UAAV,CAAqBJ,QAArB,CAAd,CAXG,CAYH;;AACAf,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,cAAc,CAAC,QAAD,CAAd;AACH;AACJ;;AAID,sBACI;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAE,CAACK,aADf;AAEI,MAAA,OAAO,EAAEN,WAFb;AAGI,MAAA,OAAO,EAAEa,aAHb;AAAA,gBAKKf,MAAM,GAAG,MAAH,GAAY;AALvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,gBAAK,CAACQ,aAAD,GAAiB,kBAAjB,GAAsC;AAA3C;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAO,MAAA,GAAG,EAAEJ;AAAZ;AAAA;AAAA;AAAA;AAAA,YAVJ,EAWKJ,MAAM,gBAAG,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEI,QAAlB;AAA4B,MAAA,KAAK,EAAEM;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiD,EAX5D;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhEuBjB,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Canvas from './Canvas';\r\nimport * as handTrack from 'handtrackjs';\r\n\r\nexport default function ButtonCamera(){\r\n\r\n    // Cấu hình các tham số cho Model nhận diện bàn tay\r\n    const modelParams = {\r\n        flipHorizontal: true,   // flip e.g for video \r\n        imageScaleFactor: 0.7,  // reduce input image size for gains in speed.\r\n        maxNumBoxes: 5,        // maximum number of boxes to detect\r\n        iouThreshold: 0.5,      // ioU threshold for non-max suppression\r\n        scoreThreshold: 0.79,    // confidence threshold for predictions.\r\n    };\r\n    const [isPlay, setPlay]             = useState(false);\r\n    const [colorButton, setColorButton] = useState('success');\r\n    const [videoRef]                    = useState(React.createRef());\r\n    const [stream, setStream]           = useState(null);\r\n    const [isLoadedModel, setLoadedModel] = useState(false);\r\n    const [model, setModel] = useState(null);\r\n\r\n    useEffect(() => {\r\n        handTrack.load(modelParams).then( modelIn => {\r\n            setModel(modelIn);\r\n            setLoadedModel(true);\r\n        });\r\n    },[]);\r\n    async function onClickButton(){\r\n        let videoObj = videoRef.current;\r\n        if (isPlay) {\r\n            await handTrack.stopVideo(videoObj);\r\n            setPlay(false);\r\n            setColorButton('success');\r\n        } else {\r\n            // navigator.mediaDevices.getUserMedia({ video: true, audio: false }) \r\n            //     .then((stream) => {                                            // function(stream) {} not work. Have to use (stream) => {}\r\n            //         console.log(\"Camera OK\");\r\n            //         videoObj.srcObject = stream;\r\n            //         videoObj.play();\r\n            //         setStream(stream);\r\n            // })\r\n            //     .catch(function(err) {\r\n            //         console.log(\"An error occurred! \" + err);\r\n            // });\r\n            let a = await handTrack.startVideo(videoObj);\r\n            // console.log(a);\r\n            setPlay(true);\r\n            setColorButton('danger');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button \r\n                disabled={!isLoadedModel}\r\n                variant={colorButton}\r\n                onClick={onClickButton}\r\n            >\r\n                {isPlay ? 'Stop' : 'Start'}\r\n            </Button>\r\n            <br></br>\r\n            <h1>{!isLoadedModel ? 'Model is loading' : 'Model is loaded'}</h1>\r\n            <video ref={videoRef}></video>\r\n            {isPlay ? <Canvas videoRef={videoRef} model={model} />: ''}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}